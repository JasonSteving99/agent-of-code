"""
Tests for count_antinodes_harmonic function which calculates the number of unique antinodes 
generated by antennas of the same frequency placed on a grid. An antinode occurs at any position 
that is in line (horizontally, vertically, or diagonally) with at least two antennas of the 
same frequency.

The tests cover:
- Grid with 'T' frequency antennas creating antinodes
- Grid with '0' and 'A' frequency antennas creating antinodes
"""

from solution import count_antinodes_harmonic


def test_t_frequency_antennas():
    grid = (
        "T....#....\n"
        "...T......\n"
        ".T....#...\n"
        ".........#\n"
        "..#.......\n"
        ".......... \n"
        "...#......\n"
        ".......... \n"
        "....#.....\n"
        ".........."
    )
    result = count_antinodes_harmonic(grid)
    assert result == 9, (
        f"Expected 9 antinodes for grid with 'T' frequency antennas:\n{grid}\n"
        f"but got {result} instead"
    )


def test_zero_and_a_frequency_antennas():
    grid = (
        "............\n"
        "........0...\n"
        ".....0......\n"
        ".......0....\n"
        "....0.......\n"
        "......A.....\n"
        "............\n"
        "............\n"
        "........A...\n"
        ".........A..\n"
        "............\n"
        "............"
    )
    result = count_antinodes_harmonic(grid)
    assert result == 34, (
        f"Expected 34 antinodes for grid with '0' and 'A' frequency antennas:\n{grid}\n"
        f"but got {result} instead"
    )